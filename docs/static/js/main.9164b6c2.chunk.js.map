{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAY5C,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAIlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAfU,SAACP,GACnBF,EAAcE,EAAEQ,OAAOF,a,QCJlBG,EAAc,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAC/B,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCLHK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DACJ,mCACTN,EAFa,iDAEoCO,UAAUF,GAF9C,6BACJ,oCADI,SAGAG,MAAMR,GAHN,cAGbS,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QATvB,kBAYbY,GAZa,4CAAH,sDCIPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACZpB,mBAAS,CAC/B0B,KAAK,GACLQ,SAAQ,IAH0B,mBAC/BC,EAD+B,KACxBC,EADwB,KAUtC,OALAC,qBAAU,WACNlB,EAAQC,GAAUkB,MACd,SAAAT,GAAG,OAAKO,EAAS,CAACV,KAAKG,EAAKK,SAAQ,SAE1C,CAACd,IACIe,EDPsBI,CAAanB,GAA9BW,EADyB,EAC9BL,KAAYQ,EADkB,EAClBA,QACnB,OACI,qCACI,oBAAIlB,UAAU,oCAAd,SAAoDI,IACnDc,GAAW,mBAAGlB,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEQe,EAAOH,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEXxBU,EAAe,WAAM,MAEMxC,mBAAS,CAAC,cAFhB,mBAEvByC,EAFuB,KAEX1C,EAFW,KAO9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ0C,EAAWb,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAA0BA,SAAUA,GAArBA,Y,MCdvCsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9164b6c2.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState('')\n    const handleChanges = (e) => {\n        setInputValue(e.target.value);\n    }\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            setCategories( cate => [inputValue, ...cate]);\n            setInputValue('');\n        }\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleChanges}\n                />\n        </form>\n    )\n}\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","import React from 'react';\nexport const GifGridItem = ({title,url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}","export const getGifs = async ( category ) => {\n    const apiKey = 'N2ggR613jNOu2S57xLF5CdgaWHJmuYkW';\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=${ apiKey }`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n   return gifs;\n}","import React from 'react';\nimport { GifGridItem } from './GifGridItem';\nimport PropTypes from 'prop-types';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nexport const GifGrid = ({ category }) => {\n    const {data:images,loading} =useFetchGifs(category);\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n            <div className=\"card-grid\">\n                {\n                    images.map( img => (\n                        <GifGridItem\n                            key={img.id}\n                            {...img}  />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\nGifGrid.propTypes = {\n    category: PropTypes.string.isRequired\n}","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data:[],\n        loading:true\n    });\n    useEffect(() => {\n        getGifs(category).then(\n            img =>  setState({data:img, loading:false})\n        );\n    },[category]);\n    return state;\n}","import React, {useState} from 'react';\nimport { AddCategory } from './AddCategory';\nimport { GifGrid } from './GifGrid';\nexport const GifExpertApp = () => {\n    //const categories = ['One Punch','Samurai X','Dragon Ball'];\n    const [categories, setCategories] = useState(['One Punch']);\n    /*const handleAdd = () => {\n        //setCategories( [...categories, 'HunterXHunter']);\n        setCategories( cate => ['HunterXHunter', ...cate]);\n    }*/\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr />\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid key={ category } category={category} />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './components/GifExpertApp';\nimport './index.css';\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}